{
    "swagger": "2.0",
    "info": {
      "description": "This is a sample ginRest server .",
      "version": "1.0.0",
      "title": "Swagger ginRest",
      "contact": {
        "email": "test@test.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "tags": [
      {
        "name": "user",
        "description": "Operations about Users"
      },
      {
        "name": "login",
        "description": "login apis"
      },
      {
        "name": "password",
        "description": "Operations about password"
      }
    ],
    "schemes": [
      "http"
    ],
    "paths": { 
      "/v1/user": {
        "get": {
            "tags" :[
                "user"
            ],
            "summary": "Get all users",
            "description" : "Get a list of all users ",
            "produces": [
                "application/json"
            ],
            "parameters":[
                
            ],
            "responses" :{
                "200": {
                    "description": "successful operation",
                    "schema": {
                      "type": "string"
                    }
                  },
                  "400": {
                    "description": "Invalid request"
                  },
                  "500":{
                      "description" :"Internal server Error"
                  }
            }
          },
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "Create a new user.",
          "operationId": "createUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/v1/user/{id}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Get user by user id",
          "description": "",
          "operationId": "getUserById",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The user-id that needs to be fetched. ",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid Id "
            },
            "404": {
              "description": "User not found"
            },
            "500":{
                "description" : "Internal server Error"
            }
          }
        },
        "put": {
          "tags": [
            "user"
          ],
          "summary": "Update user",
          "description": "Updating user details.",
          "operationId": "updateUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "user id that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            },
            "500":{
                "description":"Internal server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "summary": "Delete user",
          "description": "Deleting a user by userid.",
          "operationId": "deleteUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The user-id that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            },
            "500":{
                "description":"Internal server Error"
            }
          }
        }
      }
      "/v1/login":{
        "post":{
          "tags" :["POST","LOGIN"],
          "summary": "login user",
          "description": "login.",
          "operationId": "login",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Login object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Auth"
              }
            }
          ],
          "responses": {
            "200":{
              "description" : "success response",
               "schema": {
                "$ref": "#/definitions/AuthResponse"
              }
            },
            "400": {
              "description": "Invalid email/password supplied"
            },
            "404": {
              "description": "User not found"
            },
            "500":{
                "description":"Internal server Error"
            }
          }
           
        }
      },
      "/v1/signup":{
        "post":{
          "tags" :["POST","SIGNUP"],
          "summary": "signup user",
          "description": "signup.",
          "operationId": "signup",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "signup object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Auth"
              }
            }
          ],
          "responses": {
            "200":{
              "description" : "success response",
               "schema": {
                "$ref": "#/definitions/AuthResponse"
              }
            },
            "400": {
              "description": "Invalid email/password supplied"
            },
            "404": {
              "description": "User not found"
            },
            "500":{
                "description":"Internal server Error"
            }
          }    
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "age": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Auth":{
        "type": "object",
        "required":[
          "email",
          "password"
        ],
        "properties":{
          "email":{
            "type": "string",
            "description" : "user email"
          },
          "password":{
            "type" : "string",
            "description" : "user password"
          }
        }
      },
      "AuthResponse":{
        "type": "object",
        "required":[
          "email",
          "token"
        ],
        "properties":{
          "email":{
            "type": "string",
            "description" : "user email"
          },
          "token":{
            "type" : "string",
            "description" : "jwt token"
          }
        }
      }
    }
  }